<?php

/**
 * OpenSKOS.
 *
 * LICENSE
 *
 * This source file is subject to the GPLv3 license that is bundled
 * with this package in the file LICENSE.txt.
 * It is also available through the world-wide-web at this URL:
 * http://www.gnu.org/licenses/gpl-3.0.txt
 *
 * @category   OpenSKOS
 *
 * @copyright  Copyright (c) 2015 Picturae (http://www.picturae.com)
 * @author     Picturae
 * @license    http://www.gnu.org/licenses/gpl-3.0.txt GPLv3
 */

namespace App\Ontology;

final class OpenSkos
{
    const NAME_SPACE = 'http://openskos.org/xmlns#';
    const TENANT = 'http://openskos.org/xmlns#tenant';
    const STATUS = 'http://openskos.org/xmlns#status';
    const TOBECHECKED = 'http://openskos.org/xmlns#toBeChecked';
    const DATE_DELETED = 'http://openskos.org/xmlns#dateDeleted';
    const DELETEDBY = 'http://openskos.org/xmlns#deletedBy';
    const ACCEPTEDBY = 'http://openskos.org/xmlns#acceptedBy';
    const MODIFIEDBY = 'http://openskos.org/xmlns#modifiedBy';
    const UUID = 'http://openskos.org/xmlns#uuid';
    const SET = 'http://openskos.org/xmlns#set';
    const ROLE = 'http://openskos.org/xmlns#role';
    const INSKOSCOLLECTION = 'http://openskos.org/xmlns#inSkosCollection';
    const CODE = 'http://openskos.org/xmlns#code';
    const NAME = 'http://openskos.org/xmlns#name';      //TODO: Do we just need code?
    const DISABLESEARCHINOTERTENANTS = 'http://openskos.org/xmlns#disableSearchInOtherTenants';
    const ENABLESTATUSSESSYSTEMS = 'http://openskos.org/xmlns#enableStatussesSystem';
    const ALLOW_OAI = 'http://openskos.org/xmlns#allow_oai';
    const OAI_BASEURL = 'http://openskos.org/xmlns#oai_baseURL';
    const CONCEPTBASEURI = 'http://openskos.org/xmlns#conceptBaseUri';
    const LICENCE_URL = 'http://openskos.org/xmlns#licenceURL';
    const WEBPAGE = 'http://openskos.org/xmlns#webpage';
    const ENABLESKOSXL = 'http://openskos.org/xmlns#enableskosxl';
    const NOTATIONUNIQUEPERTENANT = 'http://openskos.org/xmlns#notationuniquepertenant';
    const NOTATIONAUTOGENERATED = 'http://openskos.org/xmlns#notationautogenerated';
    const USERTYPE = 'http://openskos.org/xmlns#usertype';
    const APIKEY = 'http://openskos.org/xmlns#apikey';

    const SEMANTICRELATION = 'http://openskos.org/xmlns#semanticRelation';
    const RELATED = 'http://openskos.org/xmlns#related';
    const BROADERTRANSITIVE = 'http://openskos.org/xmlns#broaderTransitive';
    const NARROWERTRANSITIVE = 'http://openskos.org/xmlns#narrowerTransitive';
    const BROADER = 'http://openskos.org/xmlns#broader';
    const NARROWER = 'http://openskos.org/xmlns#narrower';

    const MAPPINGRELATION = 'http://openskos.org/xmlns#mappingRelation';
    const CLOSEMATCH = 'http://openskos.org/xmlns#closeMatch';
    const EXACTMATCH = 'http://openskos.org/xmlns#exactMatch';
    const BROADMATCH = 'http://openskos.org/xmlns#broadMatch';
    const NARROWMATCH = 'http://openskos.org/xmlns#narrowMatch';
    const RELATEDMATCH = 'http://openskos.org/xmlns#relatedMatch';
    const INSCHEME = 'http://openskos.org/xmlns#inScheme';
    const HASTOPCONCEPT = 'http://openskos.org/xmlns#hasTopConcept';
    const TOPCONCEPTOF = 'http://openskos.org/xmlns#topConceptOf';
    const PREFLABEL = 'http://openskos.org/xmlns#prefLabel';
    const ALTLABEL = 'http://openskos.org/xmlns#altLabel';
    const HIDDENLABEL = 'http://openskos.org/xmlns#hiddenLabel';

    const ISREPLACEDBY = 'http://openskos.org/xmlns#isReplacedBy';
    const REPLACES = 'http://openskos.org/xmlns#replaces';
    const INCOLLECTION = 'http://openskos.org/xmlns#inCollection';
    const INSET = 'http://openskos.org/xmlns#inSet';

    const STATUS_CANDIDATE = 'candidate';
    const STATUS_APPROVED = 'approved';
    const STATUS_REDIRECTED = 'redirected';
    const STATUS_NOT_COMPLIANT = 'not_compliant';
    const STATUS_REJECTED = 'rejected';
    const STATUS_OBSOLETE = 'obsolete';
    const STATUS_DELETED = 'deleted';

    const STATUSES = [
        self::STATUS_CANDIDATE,
        self::STATUS_APPROVED,
        self::STATUS_REDIRECTED,
        self::STATUS_NOT_COMPLIANT,
        self::STATUS_REJECTED,
        self::STATUS_OBSOLETE,
        self::STATUS_DELETED,
    ];
}
